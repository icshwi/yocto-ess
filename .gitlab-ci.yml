variables:
  GIT_SUBMODULE_STRATEGY: recursive
  LANG: en_US.UTF-8

stages:
  - build
  - release

build_image:
  tags:
    - yocto
  stage: build
  image: crops/yocto:debian-9-base
  before_script:
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan -t rsa gitlab.esss.lu.se >> ~/.ssh/known_hosts
  script:
    - . ./setup-env -m ifc14xx-64b -j 8 -t 8
    - bitbake ifc14xx-image
    - bitbake mrfioc2
    - bitbake tar
    - bitbake zip
    - bitbake unzip
    - bitbake bzip2
    - bitbake hdf5
    - bitbake python-numpy
    - bitbake python3-numpy
    - bitbake gdb
    - bitbake tiff
    - bitbake c-blosc
    - bitbake netcdf-c
    - bitbake i2c-tools
    - bitbake valgrind
    - bitbake git
    - bitbake procps
    - bitbake package-index
  artifacts:
    paths:
      - build_ifc14xx-64b/tmp/deploy/images/ifc14xx-64b
      - sstate-cache/
      - downloads/
      - build_ifc14xx-64b/tmp/deploy/rpm
    expire_in: 24 hour

build_image_rt:
  tags:
    - yocto
  stage: build
  image: crops/yocto:debian-9-base
  before_script:
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan -t rsa gitlab.esss.lu.se >> ~/.ssh/known_hosts
  script:
    - . ./setup-env -m ifc14xx-rt-64b -j 8 -t 8
    - bitbake ifc14xx-image
    - bitbake mrfioc2
    - bitbake package-index
  artifacts:
    paths:
      - build_ifc14xx-rt-64b/tmp/deploy/images/ifc14xx-rt-64b
      - sstate-cache/
      - downloads/
      - build_ifc14xx-rt-64b/tmp/deploy/rpm/ifc14xx_rt_64b
    expire_in: 24 hour

build_toolchain:
  tags:
    - yocto
  stage: build
  image: crops/yocto:debian-9-base
  before_script:
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan -t rsa gitlab.esss.lu.se >> ~/.ssh/known_hosts
  script:
    - . ./setup-env -m ifc14xx-64b -j 8 -t 8
    - bitbake ifc14xx-toolchain
  artifacts:
    paths:
      - build_ifc14xx-64b/tmp/deploy/sdk
      - sstate-cache/
      - downloads/
    expire_in: 24 hour

build_image_cct:
  tags:
    - yocto
  stage: build
  image: crops/yocto:debian-9-base
  before_script:
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan -t rsa gitlab.esss.lu.se >> ~/.ssh/known_hosts
  script:
    - . ./setup-env -m cct-64 -j 8 -t 8
    - bitbake cct-image
    - bitbake tar
    - bitbake zip
    - bitbake unzip
    - bitbake bzip2
    - bitbake hdf5
    - bitbake python-numpy
    - bitbake python3-numpy
    - bitbake gdb
    - bitbake tiff
    - bitbake c-blosc
    - bitbake netcdf-c
    - bitbake valgrind
    - bitbake git
    - bitbake procps
    - bitbake package-index
  artifacts:
    paths:
      - build_cct-64/tmp/deploy/images/cct-64
      - sstate-cache/
      - downloads/
      - build_cct-64/tmp/deploy/rpm
    expire_in: 24 hour

build_image_rt_cct:
  tags:
    - yocto
  stage: build
  image: crops/yocto:debian-9-base
  before_script:
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan -t rsa gitlab.esss.lu.se >> ~/.ssh/known_hosts
  script:
    - . ./setup-env -m cct-rt-64 -j 8 -t 8
    - bitbake cct-image
    - bitbake package-index
  artifacts:
    paths:
      - build_cct-rt-64/tmp/deploy/images/cct-rt-64
      - sstate-cache/
      - downloads/
      - build_cct-rt-64/tmp/deploy/rpm/cct_rt_64
    expire_in: 24 hour

build_toolchain_cct:
  tags:
    - yocto
  stage: build
  image: crops/yocto:debian-9-base
  before_script:
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan -t rsa gitlab.esss.lu.se >> ~/.ssh/known_hosts
  script:
    - . ./setup-env -m cct-64 -j 8 -t 8
    - bitbake cct-toolchain
  artifacts:
    paths:
      - build_cct-64/tmp/deploy/sdk
      - sstate-cache/
      - downloads/
    expire_in: 24 hour

build_image_fpgaioc:
  tags:
    - yocto
  stage: build
  image: crops/yocto:debian-9-base
  before_script:
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan -t rsa gitlab.esss.lu.se >> ~/.ssh/known_hosts
  script:
    - . ./setup-env -m fpgaioc -j 8 -t 8
    - bitbake fpgaioc-image
    - bitbake tar
    - bitbake zip
    - bitbake unzip
    - bitbake bzip2
    - bitbake python-numpy
    - bitbake python3-numpy
    - bitbake gdb
    - bitbake tiff
    - bitbake c-blosc
    - bitbake netcdf-c
    - bitbake valgrind
    - bitbake git
    - bitbake package-index
  artifacts:
    paths:
      - build_fpgaioc/tmp/deploy/images/picozed-zynq7
      - sstate-cache/
      - downloads/
      - build_fpgaioc/tmp/deploy/rpm
    expire_in: 24 hour

build_toolchain_fpgaioc:
  tags:
    - yocto
  stage: build
  image: crops/yocto:debian-9-base
  before_script:
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan -t rsa gitlab.esss.lu.se >> ~/.ssh/known_hosts
  script:
    - . ./setup-env -m fpgaioc -j 8 -t 8
    - bitbake fpgaioc-toolchain
  artifacts:
    paths:
      - build_fpgaioc/tmp/deploy/sdk
      - sstate-cache/
      - downloads/
    expire_in: 24 hour

release_sstate_download:
  variables:
    GIT_STRATEGY: none
  only:
    - branches@icshwi/yocto-ess
  tags:
    - yocto
  stage: release
  image: registry.esss.lu.se/ics-docker/jfrog:latest
  script:
    - jfrog rt config artifactory --url=${ARTIFACTORY_URL} --apikey=${ARTIFACTORY_API_KEY}
    - cd sstate-cache && jfrog rt upload --flat=false "*" yocto/sstate/
    - cd ../downloads && find . -type f -name '*.done' -exec rm {} + && if [ -d git2 ]; then rm -r git2/; fi
    - jfrog rt upload --flat=false "*.tar.bz2" yocto/downloads/
    - jfrog rt upload --flat=false "*.tar.gz" yocto/downloads/
    - jfrog rt upload --flat=false "*.tar.xz" yocto/downloads/
    - jfrog rt upload --flat=false "*.tgz" yocto/downloads/
    - jfrog rt upload --flat=false "*.zip" yocto/downloads/

release_images_tags:
  variables:
    GIT_STRATEGY: none
  only:
    - tags
  tags:
    - yocto
  stage: release
  image: registry.esss.lu.se/ics-docker/jfrog:latest
  script:
    - jfrog rt config artifactory --url=${ARTIFACTORY_URL} --apikey=${ARTIFACTORY_API_KEY}
    - cd build_ifc14xx-64b/tmp/deploy/images/ifc14xx-64b && echo $CI_COMMIT_SHA > SHA-$CI_COMMIT_SHA
    - jfrog rt upload --flat=false "*" boot-images/ioxos/$CI_COMMIT_TAG/
    - cd ../../../../../
    - cd build_ifc14xx-rt-64b/tmp/deploy/images/ifc14xx-rt-64b
    - jfrog rt upload --flat=false "*" boot-images/ioxos/$CI_COMMIT_TAG/rt/
    - cd ../../../../../
    - cd build_ifc14xx-64b/tmp/deploy/sdk
    - for f in *; do filename=${f%.*}; ext=${f##*.}; mv $f "${filename}-${CI_COMMIT_SHORT_SHA}.${ext}" ; done
    - jfrog rt del --recursive=false --props="top=true" --quiet=true "yocto/toolchain/ifc14xx*"
    - jfrog rt upload --flat=false --props="top=true" "*" yocto/toolchain/
    - echo $CI_COMMIT_SHA > SHA-$CI_COMMIT_SHA
    - jfrog rt upload --flat=false "*" yocto/toolchain/$CI_COMMIT_TAG/
    - cd ../../../../
    - cd build_cct-64/tmp/deploy/images/cct-64 && echo $CI_COMMIT_SHA > SHA-$CI_COMMIT_SHA
    - jfrog rt upload --flat=false "*" boot-images/cct/$CI_COMMIT_TAG/
    - cd ../../../../../
    - cd build_cct-rt-64/tmp/deploy/images/cct-rt-64
    - jfrog rt upload --flat=false "*" boot-images/cct/$CI_COMMIT_TAG/rt/
    - cd ../../../../../
    - cd build_cct-64/tmp/deploy/sdk
    - for f in *; do filename=${f%.*}; ext=${f##*.}; mv $f "${filename}-${CI_COMMIT_SHORT_SHA}.${ext}" ; done
    - jfrog rt del --recursive=false --props="top=true" --quiet=true "yocto/toolchain/cct*"
    - jfrog rt upload --flat=false --props="top=true" "*" yocto/toolchain/
    - echo $CI_COMMIT_SHA > SHA-$CI_COMMIT_SHA
    - jfrog rt upload --flat=false "*" yocto/toolchain/$CI_COMMIT_TAG/
    - cd ../../../../
    - cd build_fpgaioc/tmp/deploy/images/picozed-zynq7 && echo $CI_COMMIT_SHA > SHA-$CI_COMMIT_SHA
    - jfrog rt upload --flat=false "*" boot-images/fpgaioc/$CI_COMMIT_TAG/
    - cd ../../../../../
    - cd build_fpgaioc/tmp/deploy/sdk
    - for f in *; do filename=${f%.*}; ext=${f##*.}; mv $f "${filename}-${CI_COMMIT_SHORT_SHA}.${ext}" ; done
    - jfrog rt del --recursive=false --props="top=true" --quiet=true "yocto/toolchain/fpgaioc*"
    - jfrog rt upload --flat=false --props="top=true" "*" yocto/toolchain/
    - echo $CI_COMMIT_SHA > SHA-$CI_COMMIT_SHA
    - jfrog rt upload --flat=false "*" yocto/toolchain/$CI_COMMIT_TAG/

release_images_web:
  variables:
    GIT_STRATEGY: none
  only:
    - web
  tags:
    - yocto
  stage: release
  image: registry.esss.lu.se/ics-docker/jfrog:latest
  script:
    - jfrog rt config artifactory --url=${ARTIFACTORY_URL} --apikey=${ARTIFACTORY_API_KEY}
    - cd build_ifc14xx-64b/tmp/deploy/images/ifc14xx-64b && echo $CI_COMMIT_SHA > SHA-$CI_COMMIT_SHA
    - jfrog rt upload --flat=false "*" boot-images/ioxos/$CI_PIPELINE_ID/
    - cd ../../../../../
    - cd build_ifc14xx-rt-64b/tmp/deploy/images/ifc14xx-rt-64b
    - jfrog rt upload --flat=false "*" boot-images/ioxos/$CI_PIPELINE_ID/rt/
    - cd ../../../../../
    - cd build_ifc14xx-64b/tmp/deploy/sdk
    - for f in *; do filename=${f%.*}; ext=${f##*.}; mv $f "${filename}-${CI_COMMIT_SHORT_SHA}.${ext}" ; done
    - echo $CI_COMMIT_SHA > SHA-$CI_COMMIT_SHA
    - jfrog rt upload --flat=false "*" yocto/toolchain/$CI_PIPELINE_ID/
    - cd ../../../../
    - cd build_cct-64/tmp/deploy/images/cct-64 && echo $CI_COMMIT_SHA > SHA-$CI_COMMIT_SHA
    - jfrog rt upload --flat=false "*" boot-images/cct/$CI_PIPELINE_ID/
    - cd ../../../../../
    - cd build_cct-rt-64/tmp/deploy/images/cct-rt-64
    - jfrog rt upload --flat=false "*" boot-images/cct/$CI_PIPELINE_ID/rt/
    - cd ../../../../../
    - cd build_cct-64/tmp/deploy/sdk
    - for f in *; do filename=${f%.*}; ext=${f##*.}; mv $f "${filename}-${CI_COMMIT_SHORT_SHA}.${ext}" ; done
    - echo $CI_COMMIT_SHA > SHA-$CI_COMMIT_SHA
    - jfrog rt upload --flat=false "*" yocto/toolchain/$CI_PIPELINE_ID/
    - cd ../../../../
    - cd build_fpgaioc/tmp/deploy/images/picozed-zynq7 && echo $CI_COMMIT_SHA > SHA-$CI_COMMIT_SHA
    - jfrog rt upload --flat=false "*" boot-images/fpgaioc/$CI_PIPELINE_ID/
    - cd ../../../../../
    - cd build_fpgaioc/tmp/deploy/sdk
    - for f in *; do filename=${f%.*}; ext=${f##*.}; mv $f "${filename}-${CI_COMMIT_SHORT_SHA}.${ext}" ; done
    - echo $CI_COMMIT_SHA > SHA-$CI_COMMIT_SHA
    - jfrog rt upload --flat=false "*" yocto/toolchain/$CI_PIPELINE_ID/

release_rpm:
  variables:
    GIT_STRATEGY: none
  only:
    - tags
    - web
  tags:
    - yocto
  stage: release
  image: registry.esss.lu.se/ics-docker/jfrog:latest
  script:
    - jfrog rt config artifactory --url=${ARTIFACTORY_URL} --apikey=${ARTIFACTORY_API_KEY}
    - cd build_ifc14xx-64b/tmp/deploy/rpm
    - jfrog rt upload --flat=false --exclude-patterns="*kernel-module-tsc-dev*;*kernel-module-tsc-dbg*" "*/kernel-module-tsc-*.rpm" rpm-ics/yocto/ioxos/ || true
    - jfrog rt upload --flat=false --exclude-patterns="*mrfioc2-dev*;*mrfioc2-dbg*" "*/mrfioc2-*.rpm" rpm-ics/yocto/ioxos/ || true
    - jfrog rt upload --flat=false --exclude-patterns="*tscmon-dev*;*tscmon-dbg*" "*/tscmon-*.rpm" rpm-ics/yocto/ioxos/ || true
    - jfrog rt upload --flat=false --exclude-patterns="*hdf5-dev*;*hdf5-dbg*" "*/hdf5-*.rpm" rpm-ics/yocto/ioxos/ || true
    - jfrog rt upload --flat=false --exclude-patterns="*tar-dev*;*tar-dbg*" "*/tar-*.rpm" rpm-ics/yocto/ioxos/ || true
    - jfrog rt upload --flat=false --exclude-patterns="*zip-dev*;*zip-dbg*" "*/zip-*.rpm" rpm-ics/yocto/ioxos/ || true
    - jfrog rt upload --flat=false --exclude-patterns="*unzip-dev*;*unzip-dbg*" "*/unzip-*.rpm" rpm-ics/yocto/ioxos/ || true
    - jfrog rt upload --flat=false --exclude-patterns="*bzip2-dev*;*bzip2-dbg*" "*/bzip2-*.rpm" rpm-ics/yocto/ioxos/ || true
    - jfrog rt upload --flat=false --exclude-patterns="*-dev-*;*-dbg-*" "*/python-*.rpm" rpm-ics/yocto/ioxos/ || true
    - jfrog rt upload --flat=false --exclude-patterns="*-dev-*;*-dbg-*" "*/python3-*.rpm" rpm-ics/yocto/ioxos/ || true
    - jfrog rt upload --flat=false --exclude-patterns="*-dev-*;*-dbg-*" "*/perl-*.rpm" rpm-ics/yocto/ioxos/ || true
    - jfrog rt upload --flat=false --exclude-patterns="*gdb-dev*;*gdb-dbg*;*gdbserver*" "*/gdb-*.rpm" rpm-ics/yocto/ioxos/ || true
    - jfrog rt upload --flat=false --exclude-patterns="*-dbg-*" "*/libtiff*.rpm" rpm-ics/yocto/ioxos/ || true
    - jfrog rt upload --flat=false --exclude-patterns="*-dbg-*" "*/c-blosc-*.rpm" rpm-ics/yocto/ioxos/ || true
    - jfrog rt upload --flat=false --exclude-patterns="*-dbg-*" "*/netcdf-c-*.rpm" rpm-ics/yocto/ioxos/ || true
    - jfrog rt upload --flat=false --exclude-patterns="*-dbg-*;*-dev-*;*-misc-*;*-doc-*;*-staticdev-*" "*/i2c-tools-*.rpm" rpm-ics/yocto/ioxos/ || true
    - jfrog rt upload --flat=false --exclude-patterns="*-dev-*;*-dbg-*;*-staticdev-*" "*/valgrind-*.rpm" rpm-ics/yocto/ioxos/ || true
    - jfrog rt upload --flat=false --exclude-patterns="*-dev-*;*-dbg-*;*-doc-*;*-perltools-*" "*/git-*.rpm" rpm-ics/yocto/ioxos/ || true
    - jfrog rt upload --flat=false --exclude-patterns="*-dev-*;*-dbg-*;*-doc-*" "*/procps-*.rpm" rpm-ics/yocto/ioxos/ || true
    - cd ../../../../build_ifc14xx-rt-64b/tmp/deploy/rpm
    - jfrog rt upload --flat=false --exclude-patterns="*kernel-module-tsc-dev*;*kernel-module-tsc-dbg*" "*/kernel-module-tsc-*.rpm" rpm-ics/yocto/ioxos/ || true
    - jfrog rt upload --flat=false --exclude-patterns="*mrfioc2-dev*;*mrfioc2-dbg*" "*/mrfioc2-*.rpm" rpm-ics/yocto/ioxos/ || true
    - cd ../../../../build_cct-64/tmp/deploy/rpm
    - jfrog rt upload --flat=false --exclude-patterns="*kernel-module-tsc-dev*;*kernel-module-tsc-dbg*" "*/kernel-module-tsc-*.rpm" rpm-ics/yocto/cct/ || true
    - jfrog rt upload --flat=false --exclude-patterns="*mrfioc2-dev*;*mrfioc2-dbg*" "*/mrfioc2-*.rpm" rpm-ics/yocto/cct/ || true
    - jfrog rt upload --flat=false --exclude-patterns="*tscmon-dev*;*tscmon-dbg*" "*/tscmon-*.rpm" rpm-ics/yocto/cct/ || true
    - jfrog rt upload --flat=false --exclude-patterns="*hdf5-dev*;*hdf5-dbg*" "*/hdf5-*.rpm" rpm-ics/yocto/cct/ || true
    - jfrog rt upload --flat=false --exclude-patterns="*tar-dev*;*tar-dbg*" "*/tar-*.rpm" rpm-ics/yocto/cct/ || true
    - jfrog rt upload --flat=false --exclude-patterns="*zip-dev*;*zip-dbg*" "*/zip-*.rpm" rpm-ics/yocto/cct/ || true
    - jfrog rt upload --flat=false --exclude-patterns="*unzip-dev*;*unzip-dbg*" "*/unzip-*.rpm" rpm-ics/yocto/cct/ || true
    - jfrog rt upload --flat=false --exclude-patterns="*bzip2-dev*;*bzip2-dbg*" "*/bzip2-*.rpm" rpm-ics/yocto/cct/ || true
    - jfrog rt upload --flat=false --exclude-patterns="*-dev-*;*-dbg-*" "*/python-*.rpm" rpm-ics/yocto/cct/ || true
    - jfrog rt upload --flat=false --exclude-patterns="*-dev-*;*-dbg-*" "*/python3-*.rpm" rpm-ics/yocto/cct/ || true
    - jfrog rt upload --flat=false --exclude-patterns="*-dev-*;*-dbg-*" "*/perl-*.rpm" rpm-ics/yocto/cct/ || true
    - jfrog rt upload --flat=false --exclude-patterns="*gdb-dev*;*gdb-dbg*;*gdbserver*" "*/gdb-*.rpm" rpm-ics/yocto/cct/ || true
    - jfrog rt upload --flat=false --exclude-patterns="*-dbg-*" "*/libtiff*.rpm" rpm-ics/yocto/cct/ || true
    - jfrog rt upload --flat=false --exclude-patterns="*-dbg-*" "*/c-blosc-*.rpm" rpm-ics/yocto/cct/ || true
    - jfrog rt upload --flat=false --exclude-patterns="*-dbg-*" "*/netcdf-c-*.rpm" rpm-ics/yocto/cct/ || true
    - jfrog rt upload --flat=false --exclude-patterns="*-dev-*;*-dbg-*;*-staticdev-*" "*/valgrind-*.rpm" rpm-ics/yocto/cct/ || true
    - jfrog rt upload --flat=false --exclude-patterns="*-dev-*;*-dbg-*;*-doc-*;*-perltools-*" "*/git-*.rpm" rpm-ics/yocto/cct/ || true
    - jfrog rt upload --flat=false --exclude-patterns="*-dev-*;*-dbg-*;*-doc-*" "*/procps-*.rpm" rpm-ics/yocto/cct/ || true
    - cd ../../../../build_cct-rt-64/tmp/deploy/rpm
    - jfrog rt upload --flat=false --exclude-patterns="*kernel-module-tsc-dev*;*kernel-module-tsc-dbg*" "*/kernel-module-tsc-*.rpm" rpm-ics/yocto/cct/ || true
    - jfrog rt upload --flat=false --exclude-patterns="*mrfioc2-dev*;*mrfioc2-dbg*" "*/mrfioc2-*.rpm" rpm-ics/yocto/cct/ || true
    - cd ../../../../build_fpgaioc/tmp/deploy/rpm/
    - jfrog rt upload --flat=false --exclude-patterns="*i2c-slave-miniioc-dev*;*i2c-slave-miniioc-dbg*" "*/i2c-slave-miniioc-*.rpm" rpm-ics/yocto/fpgaioc/ || true
    - jfrog rt upload --flat=false "*/kernel-module-i2c-slave-miniioc-*.rpm" rpm-ics/yocto/fpgaioc/ || true
    - jfrog rt upload --flat=false --exclude-patterns="*tar-dev*;*tar-dbg*" "*/tar-*.rpm" rpm-ics/yocto/fpgaioc/ || true
    - jfrog rt upload --flat=false --exclude-patterns="*zip-dev*;*zip-dbg*" "*/zip-*.rpm" rpm-ics/yocto/fpgaioc/ || true
    - jfrog rt upload --flat=false --exclude-patterns="*unzip-dev*;*unzip-dbg*" "*/unzip-*.rpm" rpm-ics/yocto/fpgaioc/ || true
    - jfrog rt upload --flat=false --exclude-patterns="*bzip2-dev*;*bzip2-dbg*" "*/bzip2-*.rpm" rpm-ics/yocto/fpgaioc/ || true
    - jfrog rt upload --flat=false --exclude-patterns="*-dev-*;*-dbg-*" "*/python-*.rpm" rpm-ics/yocto/fpgaioc/ || true
    - jfrog rt upload --flat=false --exclude-patterns="*-dev-*;*-dbg-*" "*/python3-*.rpm" rpm-ics/yocto/fpgaioc/ || true
    - jfrog rt upload --flat=false --exclude-patterns="*-dev-*;*-dbg-*" "*/perl-*.rpm" rpm-ics/yocto/fpgaioc/ || true
    - jfrog rt upload --flat=false --exclude-patterns="*gdb-dev*;*gdb-dbg*;*gdbserver*" "*/gdb-*.rpm" rpm-ics/yocto/fpgaioc/ || true
    - jfrog rt upload --flat=false --exclude-patterns="*-dbg-*" "*/libtiff*.rpm" rpm-ics/yocto/fpgaioc/ || true
    - jfrog rt upload --flat=false --exclude-patterns="*-dbg-*" "*/c-blosc-*.rpm" rpm-ics/yocto/fpgaioc/ || true
    - jfrog rt upload --flat=false --exclude-patterns="*-dbg-*" "*/netcdf-c-*.rpm" rpm-ics/yocto/fpgaioc/ || true
    - jfrog rt upload --flat=false --exclude-patterns="*-dev-*;*-dbg-*;*-staticdev-*" "*/valgrind-*.rpm" rpm-ics/yocto/fpgaioc/ || true
    - jfrog rt upload --flat=false --exclude-patterns="*-dev-*;*-dbg-*;*-doc-*;*-perltools-*" "*/git-*.rpm" rpm-ics/yocto/fpgaioc/ || true
